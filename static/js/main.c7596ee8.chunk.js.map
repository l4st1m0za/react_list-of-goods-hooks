{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","f1","f2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","cur","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA/BD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAoBzB,OAlBIJ,GACFK,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAIR,IAAaL,EAASc,OACjBF,EAAGG,OAASF,EAAGE,OAGpBV,IAAaL,EAASgB,SACjBJ,EAAGK,cAAcJ,GAGnB,KAIPN,GACFG,EAAaQ,UAGRR,EAOOS,CACZlB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYjB,IAAaL,EAASgB,WACtCO,QAAS,kBAAMjB,EAAYN,EAASgB,WAJtC,iCASA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYjB,IAAaL,EAASc,SACtCS,QAAS,kBAAMjB,EAAYN,EAASc,SAJtC,4BASA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAaf,IACjBgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAG,OAAKA,MAJvC,uBASiB,IAAfjB,GAAwBF,IAAaL,EAASI,OAC9C,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,GAAc,GACdF,EAAYN,EAASI,OALzB,sBAaJ,6BACE,6BACGK,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC7GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7596ee8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((f1, f2) => {\n      if (sortType === SortType.LENGTH) {\n        return f1.length - f2.length;\n      }\n\n      if (sortType === SortType.ALPHABET) {\n        return f1.localeCompare(f2);\n      }\n\n      return 0;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(cur => !cur)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed !== false || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}